{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/pages/ComidasEmProcesso.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport fetchAPI from '../services/index';\nimport heartWhite from \"../images/whiteHeartIcon.svg\";\nimport heartBlack from \"../images/blackHeartIcon.svg\";\nimport shareimg from \"../images/shareIcon.svg\";\nimport { createIngredientsList } from '../utils';\nimport { MEALS_BY_ID_ENDPOINT } from '../services/meals';\nimport '../css/ComidasEmProcessoCSS.css';\n\nfunction ComidasEmProcesso() {\n  const {\n    id\n  } = useParams();\n  const pathname = useLocation();\n  const history = useHistory();\n  const [meal, setMeal] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(true);\n  const [share, setFShare] = useState(false);\n  const [listIngredients, setListIngredients] = useState([]);\n  const storage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const [indexChecked, setIndexChecked] = useState(storage.meals[id] || []);\n  const storageFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n  const [favorite, setFavorite] = useState(storageFavorite.some(item => item.id === id)); // se retorna true está favoritado, se falso nao estava favoritado\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchMeal = async () => {\n      const data = await fetchAPI(MEALS_BY_ID_ENDPOINT(id));\n      setMeal(data.meals[0]);\n      console.log(data.meals[0]);\n      const ingredientes = createIngredientsList(data.meals[0]);\n      const filter = ingredientes.filter(item => item[0] !== undefined);\n      setListIngredients(filter);\n      setLoading(false);\n    };\n\n    fetchMeal();\n  }, []);\n  useEffect(() => {\n    const previousIngredientes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const newIngredientes = { ...previousIngredientes,\n      meals: { ...previousIngredientes.meals,\n        [id]: indexChecked\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newIngredientes));\n    setFinished(listIngredients.length !== indexChecked.length);\n    console.log(listIngredients);\n    console.log(indexChecked);\n  }, [indexChecked, listIngredients]);\n\n  function handleClick() {\n    // se retorna true está favoritado, se falso nao estava favoritado\n    if (!favorite) {\n      // se nao estiver favoritado eu tenho que colocar no local storage\n      setFavorite(true);\n      const newFavorite = [...storageFavorite, {\n        id,\n        type: 'comida',\n        area: meal.strArea,\n        category: meal.strCategory,\n        alcoholicOrNot: '',\n        name: meal.strMeal,\n        image: meal.strMealThumb\n      }];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    }\n\n    if (favorite) {\n      // se ja estiver favoritado eu tenho que tirar do local storage\n      setFavorite(false);\n      const removeFavorite = storageFavorite.filter(item => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(removeFavorite));\n    }\n  }\n\n  function hadleShare() {\n    copy(`http://localhost:3000${pathname}`);\n    setFShare(true);\n  }\n\n  function checkedStyle({\n    target: {\n      checked\n    }\n  }, ingredient) {\n    if (checked) {\n      setIndexChecked(previous => [...previous, ingredient]);\n    } else if (!checked) {\n      const filterChecked = indexChecked.filter(item => item !== ingredient);\n      setIndexChecked(filterChecked);\n    }\n  }\n\n  function renderList() {\n    console.log(listIngredients);\n    return listIngredients.map((item, index) => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"checks\",\n      key: index,\n      className: indexChecked.includes(item[0]) ? 'text-decoration' : 'no-decoration',\n      \"data-testid\": `${index}-ingredient-step`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checks\",\n      onClick: ev => checkedStyle(ev, item[0]),\n      checked: indexChecked.includes(item[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), `${item[0]} - ${item[1]}`));\n  }\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, \"carregando\");\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: meal.strMealThumb,\n    \"data-testid\": \"recipe-photo\",\n    alt: \"imagem da refei\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, meal.strMeal), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, meal.strMeal), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: hadleShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareimg,\n    alt: \"icone compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), share ? 'Link copiado!' : null), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    src: favorite ? heartBlack : heartWhite,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: favorite ? heartBlack : heartWhite,\n    alt: \"Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })), renderList(), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, meal.strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: finished,\n    onClick: () => history.push('/receitas-feitas'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"finalizar\"));\n}\n\nexport default ComidasEmProcesso;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/pages/ComidasEmProcesso.js"],"names":["React","useEffect","useState","useParams","useHistory","fetchAPI","createIngredientsList","MEALS_BY_ID_ENDPOINT","ComidasEmProcesso","id","pathname","useLocation","history","meal","setMeal","loading","setLoading","finished","setFinished","share","setFShare","listIngredients","setListIngredients","storage","JSON","parse","localStorage","getItem","indexChecked","setIndexChecked","meals","storageFavorite","favorite","setFavorite","some","item","fetchMeal","data","console","log","ingredientes","filter","undefined","previousIngredientes","newIngredientes","setItem","stringify","length","handleClick","newFavorite","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","removeFavorite","hadleShare","copy","checkedStyle","target","checked","ingredient","previous","filterChecked","renderList","map","index","includes","ev","shareimg","heartBlack","heartWhite","strInstructions","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport fetchAPI from '../services/index';\nimport heartWhite from '../images/whiteHeartIcon.svg';\nimport heartBlack from '../images/blackHeartIcon.svg';\nimport shareimg from '../images/shareIcon.svg';\nimport { createIngredientsList } from '../utils';\nimport { MEALS_BY_ID_ENDPOINT } from '../services/meals';\nimport '../css/ComidasEmProcessoCSS.css';\n\nfunction ComidasEmProcesso() {\n  const { id } = useParams();\n  const pathname = useLocation();\n  const history = useHistory();\n\n  const [meal, setMeal] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(true);\n  const [share, setFShare] = useState(false);\n  const [listIngredients, setListIngredients] = useState([]);\n\n  const storage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const [indexChecked, setIndexChecked] = useState(storage.meals[id] || []);\n\n  const storageFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n  const [favorite, setFavorite] = useState(storageFavorite\n    .some((item) => item.id === id));\n  // se retorna true está favoritado, se falso nao estava favoritado\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchMeal = async () => {\n      const data = await fetchAPI(MEALS_BY_ID_ENDPOINT(id));\n      setMeal(data.meals[0]);\n      console.log(data.meals[0]);\n\n      const ingredientes = createIngredientsList(data.meals[0]);\n      const filter = ingredientes.filter((item) => item[0] !== undefined);\n      setListIngredients(filter);\n\n      setLoading(false);\n    };\n\n    fetchMeal();\n  }, []);\n\n  useEffect(() => {\n    const previousIngredientes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    const newIngredientes = {\n      ...previousIngredientes,\n      meals: {\n        ...previousIngredientes.meals,\n        [id]: indexChecked,\n      },\n    };\n\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newIngredientes));\n\n    setFinished(listIngredients.length !== indexChecked.length);\n    console.log(listIngredients);\n    console.log(indexChecked);\n  }, [indexChecked, listIngredients]);\n\n  function handleClick() {\n    // se retorna true está favoritado, se falso nao estava favoritado\n    if (!favorite) {\n      // se nao estiver favoritado eu tenho que colocar no local storage\n      setFavorite(true);\n\n      const newFavorite = [\n        ...storageFavorite,\n        {\n          id,\n          type: 'comida',\n          area: meal.strArea,\n          category: meal.strCategory,\n          alcoholicOrNot: '',\n          name: meal.strMeal,\n          image: meal.strMealThumb,\n        },\n      ];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n    }\n\n    if (favorite) {\n      // se ja estiver favoritado eu tenho que tirar do local storage\n      setFavorite(false);\n      const removeFavorite = storageFavorite.filter((item) => item.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(removeFavorite));\n    }\n  }\n\n  function hadleShare() {\n    copy(`http://localhost:3000${pathname}`);\n    setFShare(true);\n  }\n\n  function checkedStyle({ target: { checked } }, ingredient) {\n    if (checked) {\n      setIndexChecked((previous) => ([...previous, ingredient]));\n    } else if (!checked) {\n      const filterChecked = indexChecked.filter((item) => item !== ingredient);\n      setIndexChecked(filterChecked);\n    }\n  }\n\n  function renderList() {\n    console.log(listIngredients);\n    return listIngredients.map((item, index) => (\n      <label\n        htmlFor=\"checks\"\n        key={ index }\n        className={ indexChecked.includes(item[0]) ? 'text-decoration' : 'no-decoration' }\n        data-testid={ `${index}-ingredient-step` }\n      >\n        <input\n          type=\"checkbox\"\n          id=\"checks\"\n          onClick={ (ev) => checkedStyle(ev, item[0]) }\n          checked={ indexChecked.includes(item[0]) }\n        />\n        { `${item[0]} - ${item[1]}` }\n      </label>\n    ));\n  }\n\n  if (loading) return <p>carregando</p>;\n\n  return (\n    <section>\n      <img\n        src={ meal.strMealThumb }\n        data-testid=\"recipe-photo\"\n        alt=\"imagem da refeição\"\n      />\n      <h3 data-testid=\"recipe-title\">{ meal.strMeal }</h3>\n      <p data-testid=\"recipe-category\">{ meal.strMeal }</p>\n\n      <button type=\"button\" data-testid=\"share-btn\" onClick={ hadleShare }>\n        <img src={ shareimg } alt=\"icone compartilhar\" />\n        { share ? 'Link copiado!' : null }\n      </button>\n\n      <button\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        src={ favorite ? heartBlack : heartWhite }\n        onClick={ handleClick }\n      >\n        <img src={ favorite ? heartBlack : heartWhite } alt=\"Favoritar\" />\n      </button>\n\n      { renderList() }\n\n      <p data-testid=\"instructions\">{ meal.strInstructions }</p>\n\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ finished }\n        onClick={ () => history.push('/receitas-feitas') }\n      >\n        finalizar\n        {/* <Link to=\"/receitas-feitas\" disable={ finished }>finalizarl</Link> */}\n      </button>\n    </section>\n  );\n}\n\nexport default ComidasEmProcesso;\n"]},"metadata":{},"sourceType":"module"}