{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/components/Recipe/Start.js\";\nimport React, { useEffect, useState } from 'react';\nimport { isUndefined } from 'lodash';\nimport { useHistory, useParams } from 'react-router-dom';\nimport '../../styles/recipe.css';\nimport { string } from 'prop-types';\n\nfunction Start({\n  type\n}) {\n  const [isDone, setIsDone] = useState(false);\n  const [alreadyStarted, setAlreadyStarted] = useState(false);\n  const {\n    id\n  } = useParams();\n  const {\n    push\n  } = useHistory();\n  useEffect(() => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    setIsDone(doneRecipes && doneRecipes.some(recipe => Number(recipe.id) === Number(id)));\n  }, [id]);\n  useEffect(() => {\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (type === 'comidas') {\n      setAlreadyStarted(inProgressRecipes && !isUndefined(inProgressRecipes.meals[id]));\n    } else {\n      setAlreadyStarted(inProgressRecipes && !isUndefined(inProgressRecipes.cocktails[id]));\n    }\n  }, [type, id]);\n  const visibility = isDone ? 'recipe-start-button-hidden' : 'recipe-start-button-show';\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `recipe-start-button ${visibility} btn-finalizar`,\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: () => push(`/${type}/${id}/in-progress`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, alreadyStarted ? 'Continuar Receita' : 'Iniciar receita');\n}\n\nStart.propTypes = {\n  type: string.isRequired\n};\nexport default Start;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/components/Recipe/Start.js"],"names":["React","useEffect","useState","isUndefined","useHistory","useParams","string","Start","type","isDone","setIsDone","alreadyStarted","setAlreadyStarted","id","push","doneRecipes","JSON","parse","localStorage","getItem","some","recipe","Number","inProgressRecipes","meals","cocktails","visibility","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AAEA,OAAO,yBAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAyB;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWV,UAAU,EAA3B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACAT,IAAAA,SAAS,CAACK,WAAW,IAAIA,WAAW,CACjCK,IADsB,CAChBC,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACR,EAAR,CAAN,KAAsBS,MAAM,CAACT,EAAD,CADvB,CAAhB,CAAT;AAED,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,iBAAiB,GAAGP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAA1B;;AACA,QAAIX,IAAI,KAAK,SAAb,EAAwB;AACtBI,MAAAA,iBAAiB,CAACW,iBAAiB,IAAI,CAACpB,WAAW,CAACoB,iBAAiB,CAACC,KAAlB,CAAwBX,EAAxB,CAAD,CAAlC,CAAjB;AACD,KAFD,MAEO;AACLD,MAAAA,iBAAiB,CACfW,iBAAiB,IAAI,CAACpB,WAAW,CAACoB,iBAAiB,CAACE,SAAlB,CAA4BZ,EAA5B,CAAD,CADlB,CAAjB;AAGD;AACF,GATQ,EASN,CAACL,IAAD,EAAOK,EAAP,CATM,CAAT;AAWA,QAAMa,UAAU,GAAGjB,MAAM,GAAG,4BAAH,GACrB,0BADJ;AAEA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAI,uBAAsBiB,UAAW,gBAFhD;AAGE,mBAAY,kBAHd;AAIE,IAAA,OAAO,EAAG,MAAMZ,IAAI,CAAE,IAAGN,IAAK,IAAGK,EAAG,cAAhB,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,cAAc,GAAG,mBAAH,GAAyB,iBAN1C,CADF;AAUD;;AAEDJ,KAAK,CAACoB,SAAN,GAAkB;AAChBnB,EAAAA,IAAI,EAAEF,MAAM,CAACsB;AADG,CAAlB;AAIA,eAAerB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { isUndefined } from 'lodash';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport '../../styles/recipe.css';\nimport { string } from 'prop-types';\n\nfunction Start({ type }) {\n  const [isDone, setIsDone] = useState(false);\n  const [alreadyStarted, setAlreadyStarted] = useState(false);\n  const { id } = useParams();\n  const { push } = useHistory();\n  useEffect(() => {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    setIsDone(doneRecipes && doneRecipes\n      .some((recipe) => Number(recipe.id) === Number(id)));\n  }, [id]);\n  useEffect(() => {\n    const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (type === 'comidas') {\n      setAlreadyStarted(inProgressRecipes && !isUndefined(inProgressRecipes.meals[id]));\n    } else {\n      setAlreadyStarted(\n        inProgressRecipes && !isUndefined(inProgressRecipes.cocktails[id]),\n      );\n    }\n  }, [type, id]);\n\n  const visibility = isDone ? 'recipe-start-button-hidden'\n    : 'recipe-start-button-show';\n  return (\n    <button\n      type=\"button\"\n      className={ `recipe-start-button ${visibility} btn-finalizar` }\n      data-testid=\"start-recipe-btn\"\n      onClick={ () => push(`/${type}/${id}/in-progress`) }\n    >\n      {alreadyStarted ? 'Continuar Receita' : 'Iniciar receita'}\n    </button>\n  );\n}\n\nStart.propTypes = {\n  type: string.isRequired,\n};\n\nexport default Start;\n"]},"metadata":{},"sourceType":"module"}