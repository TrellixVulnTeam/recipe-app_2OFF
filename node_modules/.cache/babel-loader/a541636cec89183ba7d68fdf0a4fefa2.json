{"ast":null,"code":"import { isEmpty, isString } from 'lodash';\n\nfunction filterGarbageEntriesWithName(string) {\n  return arrayOfObjectEntries => arrayOfObjectEntries.filter(([key]) => key.includes(string)).map(([key, value]) => isString(value) ? [key, value] : [key, '']).map(([key, value]) => value === ' ' ? [key, ''] : [key, value]).filter(([, value]) => !isEmpty(value)).map(([, value]) => value);\n}\n\nconst filterIngredientes = filterGarbageEntriesWithName('strIngredient');\nconst filterMeasurements = filterGarbageEntriesWithName('strMeasure');\nexport function createIngredientsList(object = {}) {\n  const entries = Object.entries(object);\n  const measurements = filterMeasurements(entries);\n  const ingredients = filterIngredientes(entries);\n  const zipTheArraysTogether = ingredients.reduce((acc, cur, index) => [...acc, [cur, measurements[index] || '']], []);\n  return zipTheArraysTogether;\n}\nexport default createIngredientsList;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/utils/index.js"],"names":["isEmpty","isString","filterGarbageEntriesWithName","string","arrayOfObjectEntries","filter","key","includes","map","value","filterIngredientes","filterMeasurements","createIngredientsList","object","entries","Object","measurements","ingredients","zipTheArraysTogether","reduce","acc","cur","index"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,QAAlC;;AAEA,SAASC,4BAAT,CAAsCC,MAAtC,EAA8C;AAC5C,SAAQC,oBAAD,IAA0BA,oBAAoB,CAClDC,MAD8B,CACvB,CAAC,CAACC,GAAD,CAAD,KAAWA,GAAG,CAACC,QAAJ,CAAaJ,MAAb,CADY,EAE9BK,GAF8B,CAE1B,CAAC,CAACF,GAAD,EAAMG,KAAN,CAAD,KAAmBR,QAAQ,CAACQ,KAAD,CAAR,GAAkB,CAACH,GAAD,EAAMG,KAAN,CAAlB,GAAiC,CAACH,GAAD,EAAM,EAAN,CAF1B,EAG9BE,GAH8B,CAG1B,CAAC,CAACF,GAAD,EAAMG,KAAN,CAAD,KAAoBA,KAAK,KAAK,GAAX,GAAkB,CAACH,GAAD,EAAM,EAAN,CAAlB,GAA8B,CAACA,GAAD,EAAMG,KAAN,CAHvB,EAI9BJ,MAJ8B,CAIvB,CAAC,GAAGI,KAAH,CAAD,KAAe,CAACT,OAAO,CAACS,KAAD,CAJA,EAK9BD,GAL8B,CAK1B,CAAC,GAAGC,KAAH,CAAD,KAAeA,KALW,CAAjC;AAMD;;AACD,MAAMC,kBAAkB,GAAGR,4BAA4B,CAAC,eAAD,CAAvD;AACA,MAAMS,kBAAkB,GAAGT,4BAA4B,CAAC,YAAD,CAAvD;AAEA,OAAO,SAASU,qBAAT,CAA+BC,MAAM,GAAG,EAAxC,EAA4C;AACjD,QAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeD,MAAf,CAAhB;AACA,QAAMG,YAAY,GAAGL,kBAAkB,CAACG,OAAD,CAAvC;AACA,QAAMG,WAAW,GAAGP,kBAAkB,CAACI,OAAD,CAAtC;AAEA,QAAMI,oBAAoB,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAsB,CACpE,GAAGF,GADiE,EAEpE,CAACC,GAAD,EAAML,YAAY,CAACM,KAAD,CAAZ,IAAuB,EAA7B,CAFoE,CAAzC,EAGzB,EAHyB,CAA7B;AAIA,SAAOJ,oBAAP;AACD;AAED,eAAeN,qBAAf","sourcesContent":["import { isEmpty, isString } from 'lodash';\n\nfunction filterGarbageEntriesWithName(string) {\n  return (arrayOfObjectEntries) => arrayOfObjectEntries\n    .filter(([key]) => key.includes(string))\n    .map(([key, value]) => (isString(value) ? [key, value] : [key, '']))\n    .map(([key, value]) => ((value === ' ') ? [key, ''] : [key, value]))\n    .filter(([, value]) => !isEmpty(value))\n    .map(([, value]) => value);\n}\nconst filterIngredientes = filterGarbageEntriesWithName('strIngredient');\nconst filterMeasurements = filterGarbageEntriesWithName('strMeasure');\n\nexport function createIngredientsList(object = {}) {\n  const entries = Object.entries(object);\n  const measurements = filterMeasurements(entries);\n  const ingredients = filterIngredientes(entries);\n\n  const zipTheArraysTogether = ingredients.reduce((acc, cur, index) => ([\n    ...acc,\n    [cur, measurements[index] || ''],\n  ]), []);\n  return zipTheArraysTogether;\n}\n\nexport default createIngredientsList;\n"]},"metadata":{},"sourceType":"module"}