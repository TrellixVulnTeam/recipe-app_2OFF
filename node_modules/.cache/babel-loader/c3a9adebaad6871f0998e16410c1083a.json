{"ast":null,"code":"import { isEmpty, isString, zip } from 'lodash';\nexport default function createIngredientsList(object = {}) {\n  const entries = Object.entries(object);\n  const ingredients = entries.filter(([key]) => key.includes('strIngredient')).filter(([, value]) => isString(value) && !isEmpty(value)).map(([, value]) => value);\n  const measurements = entries.filter(([key]) => key.includes('strMeasure')).filter(([, value]) => isString(value) && !isEmpty(value)).map(([, value]) => value);\n  return zip(ingredients, measurements);\n} // export default createIngredientsList;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/utils/index.js"],"names":["isEmpty","isString","zip","createIngredientsList","object","entries","Object","ingredients","filter","key","includes","value","map","measurements"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,GAA5B,QAAuC,QAAvC;AAEA,eAAe,SAASC,qBAAT,CAA+BC,MAAM,GAAG,EAAxC,EAA4C;AACzD,QAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeD,MAAf,CAAhB;AACA,QAAMG,WAAW,GAAGF,OAAO,CACxBG,MADiB,CACV,CAAC,CAACC,GAAD,CAAD,KAAWA,GAAG,CAACC,QAAJ,CAAa,eAAb,CADD,EAEjBF,MAFiB,CAEV,CAAC,GAAGG,KAAH,CAAD,KAAeV,QAAQ,CAACU,KAAD,CAAR,IAAmB,CAACX,OAAO,CAACW,KAAD,CAFhC,EAGjBC,GAHiB,CAGb,CAAC,GAAGD,KAAH,CAAD,KAAeA,KAHF,CAApB;AAIA,QAAME,YAAY,GAAGR,OAAO,CACzBG,MADkB,CACX,CAAC,CAACC,GAAD,CAAD,KAAWA,GAAG,CAACC,QAAJ,CAAa,YAAb,CADA,EAElBF,MAFkB,CAEX,CAAC,GAAGG,KAAH,CAAD,KAAeV,QAAQ,CAACU,KAAD,CAAR,IAAmB,CAACX,OAAO,CAACW,KAAD,CAF/B,EAGlBC,GAHkB,CAGd,CAAC,GAAGD,KAAH,CAAD,KAAeA,KAHD,CAArB;AAIA,SAAOT,GAAG,CAACK,WAAD,EAAcM,YAAd,CAAV;AACD,C,CAED","sourcesContent":["import { isEmpty, isString, zip } from 'lodash';\n\nexport default function createIngredientsList(object = {}) {\n  const entries = Object.entries(object);\n  const ingredients = entries\n    .filter(([key]) => key.includes('strIngredient'))\n    .filter(([, value]) => isString(value) && !isEmpty(value))\n    .map(([, value]) => value);\n  const measurements = entries\n    .filter(([key]) => key.includes('strMeasure'))\n    .filter(([, value]) => isString(value) && !isEmpty(value))\n    .map(([, value]) => value);\n  return zip(ingredients, measurements);\n}\n\n// export default createIngredientsList;\n"]},"metadata":{},"sourceType":"module"}