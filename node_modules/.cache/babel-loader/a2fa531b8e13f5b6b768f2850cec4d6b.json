{"ast":null,"code":"import { MEALS_ALL_CATEGORIES_ENDPOINT, MEALS_INGREDIENT_ENDPOINT, MEALS_ALL_AREAS_ENDPOINT } from '../../services/meals';\nimport fetchAPI from '../../services';\nimport { finishedLoadingAreas, finishedLoadingCategories, finishedLoadingIngredients, finishedLoadingRecipes, loadingAreas, loadingAreasFailed, loadingCategories, loadingCategoriesFailed, loadingIngredient, loadingIngredientsFailed, loadingRecipes, loadingRecipesFailed } from './loadingAction';\nexport const SET_MEALS = 'SET_MEALS';\nexport const SET_SEARCH_BAR_MEALS = 'SET_SEARCH_BAR_MEALS';\nexport const SET_MEAL_DETAILS = 'SET_MEAL_DETAILS';\nexport const SET_MEAL_CATEGORIES = 'SET_MEAL_CATEGORIES';\nexport const CHANGE_MEAL_CATEGORY = 'CHANGE_MEAL_CATEGORY';\nexport const SET_MEALS_INGREDIENTS = 'SET_MEALS_INGREDIENTS';\nexport const SET_MEAL_AREAS = 'SET_MEAL_AREAS';\nexport const CHANGE_MEAL_AREA = 'CHANGE_MEAL_AREA';\n\nfunction APIThunk(setter) {\n  return URL => async dispatch => {\n    dispatch(loadingRecipes(URL));\n\n    try {\n      const response = await fetchAPI(URL);\n      dispatch(setter(response.meals));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingRecipesFailed(e));\n    }\n\n    dispatch(finishedLoadingRecipes());\n  };\n}\n\nfunction setMeals(payload) {\n  return {\n    type: SET_MEALS,\n    payload\n  };\n}\n\nfunction setSearchBarMeals(payload) {\n  return {\n    type: SET_SEARCH_BAR_MEALS,\n    payload\n  };\n}\n\nfunction setMealDetails(payload) {\n  return {\n    type: SET_MEAL_DETAILS,\n    payload\n  };\n}\n\nexport const getFoodRecipesAPIThunk = APIThunk(setMeals);\nexport const getFoodSearchBarAPIThunk = APIThunk(setSearchBarMeals);\nexport const getFoodDetailsAPIThunk = APIThunk(setMealDetails);\n\nfunction setCategories(payload) {\n  return {\n    type: SET_MEAL_CATEGORIES,\n    payload\n  };\n}\n\nexport function getFoodCategoriesAPIThunk() {\n  const LAST_CATEGORY_INDEX = 5;\n\n  const onlyTheFirst5 = (_recipe, index) => index < LAST_CATEGORY_INDEX;\n\n  return async dispatch => {\n    dispatch(loadingCategories());\n\n    try {\n      const response = await fetchAPI(MEALS_ALL_CATEGORIES_ENDPOINT);\n      dispatch(setCategories(response.meals.filter(onlyTheFirst5)));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingCategoriesFailed(e));\n    }\n\n    dispatch(finishedLoadingCategories());\n  };\n}\n\nfunction setAreas(payload) {\n  return {\n    type: SET_MEAL_AREAS,\n    payload\n  };\n}\n\nexport function getFoodAreasAPIThunk() {\n  return async dispatch => {\n    dispatch(loadingAreas());\n\n    try {\n      console.log(MEALS_ALL_AREAS_ENDPOINT);\n      const response = await fetchAPI(MEALS_ALL_AREAS_ENDPOINT);\n      dispatch(setAreas(response.meals));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingAreasFailed(e));\n    }\n\n    dispatch(finishedLoadingAreas());\n  };\n}\nexport function changeCategory(payload) {\n  return {\n    type: CHANGE_MEAL_CATEGORY,\n    payload\n  };\n}\nexport function setIngredients(payload) {\n  return {\n    type: SET_MEALS_INGREDIENTS,\n    payload\n  };\n}\nexport function getMealsIngredientsAPIThunk() {\n  const LAST_INGREDIENT_INDEX = 12;\n\n  const onlyTheFirst12 = (_recipe, index) => index < LAST_INGREDIENT_INDEX;\n\n  return async dispatch => {\n    dispatch(loadingIngredient());\n\n    try {\n      const response = await fetchAPI(MEALS_INGREDIENT_ENDPOINT);\n      dispatch(setIngredients(response.meals.filter(onlyTheFirst12)));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingIngredientsFailed(e));\n    }\n\n    dispatch(finishedLoadingIngredients());\n  };\n}\nexport function changeArea(payload) {\n  return {\n    type: CHANGE_MEAL_AREA,\n    payload\n  };\n}","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/trybe-projects/sd-010-a-project-recipes-app/src/redux/actions/mealsAction.js"],"names":["MEALS_ALL_CATEGORIES_ENDPOINT","MEALS_INGREDIENT_ENDPOINT","MEALS_ALL_AREAS_ENDPOINT","fetchAPI","finishedLoadingAreas","finishedLoadingCategories","finishedLoadingIngredients","finishedLoadingRecipes","loadingAreas","loadingAreasFailed","loadingCategories","loadingCategoriesFailed","loadingIngredient","loadingIngredientsFailed","loadingRecipes","loadingRecipesFailed","SET_MEALS","SET_SEARCH_BAR_MEALS","SET_MEAL_DETAILS","SET_MEAL_CATEGORIES","CHANGE_MEAL_CATEGORY","SET_MEALS_INGREDIENTS","SET_MEAL_AREAS","CHANGE_MEAL_AREA","APIThunk","setter","URL","dispatch","response","meals","e","console","error","setMeals","payload","type","setSearchBarMeals","setMealDetails","getFoodRecipesAPIThunk","getFoodSearchBarAPIThunk","getFoodDetailsAPIThunk","setCategories","getFoodCategoriesAPIThunk","LAST_CATEGORY_INDEX","onlyTheFirst5","_recipe","index","filter","setAreas","getFoodAreasAPIThunk","log","changeCategory","setIngredients","getMealsIngredientsAPIThunk","LAST_INGREDIENT_INDEX","onlyTheFirst12","changeArea"],"mappings":"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","sourcesContent":["import { MEALS_ALL_CATEGORIES_ENDPOINT,\n  MEALS_INGREDIENT_ENDPOINT,\n  MEALS_ALL_AREAS_ENDPOINT } from '../../services/meals';\n\nimport fetchAPI from '../../services';\nimport {\n  finishedLoadingAreas,\n  finishedLoadingCategories,\n  finishedLoadingIngredients,\n  finishedLoadingRecipes,\n  loadingAreas,\n  loadingAreasFailed,\n  loadingCategories,\n  loadingCategoriesFailed,\n  loadingIngredient,\n  loadingIngredientsFailed,\n  loadingRecipes,\n  loadingRecipesFailed } from './loadingAction';\n\nexport const SET_MEALS = 'SET_MEALS';\nexport const SET_SEARCH_BAR_MEALS = 'SET_SEARCH_BAR_MEALS';\nexport const SET_MEAL_DETAILS = 'SET_MEAL_DETAILS';\nexport const SET_MEAL_CATEGORIES = 'SET_MEAL_CATEGORIES';\nexport const CHANGE_MEAL_CATEGORY = 'CHANGE_MEAL_CATEGORY';\nexport const SET_MEALS_INGREDIENTS = 'SET_MEALS_INGREDIENTS';\nexport const SET_MEAL_AREAS = 'SET_MEAL_AREAS';\nexport const CHANGE_MEAL_AREA = 'CHANGE_MEAL_AREA';\n\nfunction APIThunk(setter) {\n  return (URL) => async (dispatch) => {\n    dispatch(loadingRecipes(URL));\n    try {\n      const response = await fetchAPI(URL);\n      dispatch(setter(response.meals));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingRecipesFailed(e));\n    }\n    dispatch(finishedLoadingRecipes());\n  };\n}\nfunction setMeals(payload) {\n  return {\n    type: SET_MEALS,\n    payload,\n  };\n}\nfunction setSearchBarMeals(payload) {\n  return {\n    type: SET_SEARCH_BAR_MEALS,\n    payload,\n  };\n}\nfunction setMealDetails(payload) {\n  return {\n    type: SET_MEAL_DETAILS,\n    payload,\n  };\n}\nexport const getFoodRecipesAPIThunk = APIThunk(setMeals);\nexport const getFoodSearchBarAPIThunk = APIThunk(setSearchBarMeals);\nexport const getFoodDetailsAPIThunk = APIThunk(setMealDetails);\n\nfunction setCategories(payload) {\n  return {\n    type: SET_MEAL_CATEGORIES,\n    payload,\n  };\n}\nexport function getFoodCategoriesAPIThunk() {\n  const LAST_CATEGORY_INDEX = 5;\n  const onlyTheFirst5 = (_recipe, index) => index < LAST_CATEGORY_INDEX;\n  return async (dispatch) => {\n    dispatch(loadingCategories());\n    try {\n      const response = await fetchAPI(MEALS_ALL_CATEGORIES_ENDPOINT);\n      dispatch(setCategories(response.meals.filter(onlyTheFirst5)));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingCategoriesFailed(e));\n    }\n    dispatch(finishedLoadingCategories());\n  };\n}\nfunction setAreas(payload) {\n  return {\n    type: SET_MEAL_AREAS,\n    payload,\n  };\n}\nexport function getFoodAreasAPIThunk() {\n  return async (dispatch) => {\n    dispatch(loadingAreas());\n    try {\n      console.log(MEALS_ALL_AREAS_ENDPOINT);\n      const response = await fetchAPI(MEALS_ALL_AREAS_ENDPOINT);\n      dispatch(setAreas(response.meals));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingAreasFailed(e));\n    }\n    dispatch(finishedLoadingAreas());\n  };\n}\nexport function changeCategory(payload) {\n  return {\n    type: CHANGE_MEAL_CATEGORY,\n    payload,\n  };\n}\nexport function setIngredients(payload) {\n  return {\n    type: SET_MEALS_INGREDIENTS,\n    payload,\n  };\n}\nexport function getMealsIngredientsAPIThunk() {\n  const LAST_INGREDIENT_INDEX = 12;\n  const onlyTheFirst12 = (_recipe, index) => index < LAST_INGREDIENT_INDEX;\n  return async (dispatch) => {\n    dispatch(loadingIngredient());\n    try {\n      const response = await fetchAPI(MEALS_INGREDIENT_ENDPOINT);\n      dispatch(setIngredients(response.meals.filter(onlyTheFirst12)));\n    } catch (e) {\n      console.error(e);\n      dispatch(loadingIngredientsFailed(e));\n    }\n    dispatch(finishedLoadingIngredients());\n  };\n}\nexport function changeArea(payload) {\n  return {\n    type: CHANGE_MEAL_AREA,\n    payload,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}